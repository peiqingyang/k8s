

赛程说明 （当前赛程共1个任务  共22题）
某企业拟使用OpenStack搭建一个企业云平台，以实现资源池化弹性管理、企业应用集中管理、统一安全认证和授权等管理。
系统架构如图1所示，IP地址规划如表1所示。
 
图1系统架构图

表1 IP地址规划
设备名称	主机名	接口	IP地址	说明
云服务器1	Controller	eth0	172.129.x.0/24	Vlan x
		eth1	自定义	自行创建
云服务器2	Compute	eth0	172.129.x.0/24	Vlan x
		eth1	自定义	自行创建
云服务器3
...
云服务器n	自定义	eth0	172.129.x.0/24	用于实操题
PC-1		本地连接	172.24.16.0/24	PC使用
说明：
1.竞赛使用集群模式进行，比赛时给每个参赛队提供独立的租户与用户，各用户的资源配额相同，选手通过用户名与密码登录竞赛用私有云平台，创建云主机进行相应答题；
2.表中的x为工位号；在进行OpenStack搭建时的第二块网卡地址根据题意自行创建；
3.根据图表给出的信息，检查硬件连线及网络设备配置，确保网络连接正常； 
4.考试所需要的账号资源、竞赛资源包与附件均会在考位信息表与设备确认单中给出；
5.竞赛过程中，为确保服务器的安全，请自行修改服务器密码；在考试系统提交信息时，请确认自己的IP地址，用户名和密码。

一、私有云任务（当前任务共22道题目）
1、【实操题】基础环境配置（1分）
使用提供的两台云主机，按以下要求配置服务器：
（1）设置控制节点主机名为controller，设置计算节点主机名为compute；
（2）修改hosts文件将IP地址映射为主机名；
完成后提交控制节点的用户名、密码和IP地址到答题框。

2、【实操题】Yum源配置（1分）
使用提供的http服务地址，在http服务下，存在centos7.9和iaas的网络yum源，使用该http源作为安装iaas平台的网络源。分别设置controller节点和compute节点的yum源文件http.repo。完成后提交控制节点的用户名、密码和IP地址到答题框。
3、【实操题】计算节点分区（1.5分）
在compute节点上利用空白分区划分3个10G分区。完成后提交计算节点的用户名、密码和IP地址到答题框( 虚拟机默认密码为Abc@1234)。
4、【实操题】配置无秘钥ssh（1分）
配置controller节点可以无秘钥访问compute节点，配置完成后，尝试ssh连接compute节点的hostname进行测试。完成后提交controller节点的用户名、密码和IP地址到答题框( 虚拟机默认密码为Abc@1234)。
5、【实操题】配置主机禁ping（1分）
修改controller节点的/etc/sysctl.conf文件，配置controller节点禁止其他节点可以ping它，配置完之后。完成后提交controller节点的用户名、密码和IP地址到答题框( 虚拟机默认密码为Abc@1234)

6、【实操题】基础安装（0.5分）
在控制节点和计算节点上分别安装openstack-iaas软件包，根据表2配置两个节点脚本文件中的基本变量（配置脚本文件为/etc/openstack/openrc.sh，虚拟机网段为10.24.192.0/20）。
#、【实操题】数据库与基础服务安装（0.5分）
在controller节点上使用iaas-install-mysql.sh 脚本安装Mariadb、Memcached、RabbitMQ等服务。安装服务完毕后，完成下列题目。
1.登录数据库服务，创建库test，并在库test中创建表company（表结构如(id int not null primary key,name varchar(50),addr varchar(255))所示），在表company中插入一条数据(1,"alibaba","china")。
2.使用RabbitMQ服务的相关命令创建用户chinaskill，密码为chinapd，并赋予该用户administrator权限。
3.对mencached服务进行操作，使memcached的缓存由64MB变为256MB。
完成后提交控制节点的用户名、密码（默认Abc@1234）和IP地址到答题框。
7、【实操题】数据库安装（1分）
在controller节点上使用iaas-install-mysql.sh 脚本安装Mariadb、Memcached、RabbitMQ等服务。安装服务完毕后，完成下列题目。
1.	修改/etc/my.cnf文件，设置数据库支持大小写。
2.	修改/etc/my.cnf文件，设置数据库缓存innodb表的索引，数据，插入数据时的缓冲为4G。

8、【实操题】Keystone服务安装（1.5分）
在controller节点上使用iaas-install-keystone.sh脚本安装Keystone服务。安装完成后，使用keystone相关命令，创建用户chinaskill，密码为000000。完成后提交控制节点的用户名、密码和IP地址到答题框。

9、【实操题】Glance安装与上传（1分）
在controller节点上使用iaas-install-glance.sh脚本安装glance 服务。使用命令将提供的cirros-0.3.4-x86_64-disk.img镜像上传至平台，命名为cirros，并设置最小启动需要的硬盘为10G，最小启动需要的内存为1G。完成后提交控制节点的用户名、密码和IP地址到答题框。

10、【实操题】Glance服务调优（1分）
glance服务安装完毕后，修改glance响应最大返回项数，该参数默认设置过短，可能导致响应数据被截断，镜像上传失败，修改该参数为1000。完成后提交控制节点的用户名、密码和IP地址到答题框。

#、【实操题】Nova安装（1分）
在controller节点和compute节点上分别使用iaas-install-nova -controller.sh脚本、iaas-install-nova-compute.sh脚本安装Nova 服务。安装完成后，修改云平台中默认每个tenant的实例配额为20个。完成后提交控制节点的用户名、密码（默认Abc@1234）和IP地址到答题框。

11、【实操题】Nova安装与配置（1分）
在controller节点和compute节点上分别使用iaas-install-placement.sh脚本、iaas-install-nova -controller.sh脚本、iaas-install-nova-compute.sh脚本安装Nova服务。安装完成后，修改相关参数对openstack平台进行调优操作，相应的调优操作有：
（1）设置cpu超售比例为4倍；
（2）设置内存超售比例为1.5倍；
（3）预留2048mb内存，这部分内存不能被虚拟机使用；
（4）预留10240mb磁盘，这部分磁盘不能被虚拟机使用；
完成后提交控制节点的用户名、密码和IP地址到答题框。

12、【实操题】修改Nova启动策略（2分）
在平时使用OpenStack平台的时候，当同时启动大量虚拟机时，会出现排队现象，导致虚拟机启动超时从而获取不到IP地址而报错失败，请修改nova相关配置文件，使虚拟机可以在启动完成后获取IP地址，不会因为超时而报错。配置完成后提交controller点的用户名、密码和IP地址到答题框。


13、【实操题】Neutron安装（1分）
使用提供的脚本iaas-install-neutron-controller.sh和iaas-install-neutron-compute.sh，在controller和compute节点上安装neutron服务。完成后提交控制节点的用户名、密码和IP地址到答题框。
14、【实操题】Doshboard安装与管理（2分）
在controller节点上使用iaas-install-dashboad.sh脚本安装dashboad服务。安装完成后，将Dashboard中的Djingo数据修改为存储在文件中（此种修改解决了ALL-in-one快照在其他云平台Dashboard不能访问的问题）。完成后提交控制节点的用户名、密码和IP地址到答题框。

15、【实操题】Swift安装与管理（2分）
在控制节点和计算节点上分别使用iaas-install-swift-controller.sh和iaas-install-swift-compute.sh脚本安装Swift服务。安装完成后，使用命令创建一个名叫examcontainer的容器，将cirros-0.3.4-x86_64-disk.img镜像上传到examcontainer容器中，并设置分段存放，每一段大小为10M。完成后提交控制节点的用户名、密码和IP地址到答题框。
16、【实操题】Cinder安装与管理（1.5分）
在控制节点和计算节点分别使用iaas-install-cinder-controller.sh、iaas-install-cinder-compute.sh脚本安装Cinder服务，请在计算节点，对块存储进行扩容操作，即在计算节点再分出一个5G的分区，加入到cinder块存储的后端存储中去。完成后提交计算节点的用户名、密码和IP地址到答题框。
17、【实操题】开放镜像（1分）
使用自己搭建的OpenStack私有云平台，在OpenStack平台的admin项目中使用cirros-0.3.4-x86_64-disk.img镜像文件创建名为glance-cirros的镜像，通过OpenStack命令将glance-cirros镜像指定demo项目进行共享使用。配置完成后提交controller点的用户名、密码和IP地址到答题框。
Glance image-update 
#、【实操题】Heat安装（0.5分）
在控制节点上使用iaas-install-heat.sh脚本安装Heat服务。完成后提交控制节点的用户名、密码（默认Abc@1234）和IP地址到答题框。
#、【实操题】manila安装（1分）
在控制和计算节点上分别使用iaas-install-manila-controller.sh和iaas-install-manila-compute.sh脚本安装manila服务。安装服务后创建default_share_type共享类型（不使用驱动程序支持），接着创建一个大小为2G的共享存储名为share01。最后提交控制节点的用户名、密码（默认Abc@1234）和IP地址到答题框。
18、【实操题】OpenStack参数调优（1分）
OpenStack各服务内部通信都是通过RPC来交互，各agent都需要去连接RabbitMQ；随着各服务agent增多，MQ的连接数会随之增多，最终可能会到达上限，成为瓶颈。使用自行搭建的OpenStack私有云平台，分别通过用户级别、系统级别、配置文件来设置RabbitMQ服务的最大连接数为10240，配置完成后提交修改节点的用户名、密码和IP地址到答题框。

#、【实操题】OpenStack平台内存优化（1分）
搭建完OpenStack平台后，关闭系统的内存共享，打开透明大页。完成后提交控制节点的用户名、密码（默认Abc@1234）和IP地址到答题框。
 19、【实操题】Linux系统调优（2分）
Linux服务器大并发时，往往需要预先调优Linux参数。默认情况下，Linux最大文件句柄数为1024个。当你的服务器在大并发达到极限时，就会报出“too many open files”。创建一台云主机，修改相关配置，将Linux最大文件句柄数永久修改为65535。配置完成后提交controller点的用户名、密码和IP地址到答题框。
#、【实操题】Cinder数据加密（1分）
使用自行创建的OpenStack云计算平台，通过相关配置，开启Cinder块存储的数据加密功能，然后创建加密卷类型luks，并配置卷类型luks使用带有512位密钥，Cipher使用aes-xts-plain64，Control Location使用front-end，Provider使用nova.volume.encryptors.luks.LuksEncryptor，最后分别创建两个大小为1G的云硬盘，一个是普通云硬盘，另一个使用加密卷类型。配置完成后提交controller控制节点的用户名、密码（默认Abc@1234）和IP地址到答题框。


#、【实操题】OpenStack Glance镜像压缩（1分）
使用自行搭建的OpenStack平台。在HTTP服务中存在一个镜像为CentOS7.5-compress.qcow2的镜像，请使用qemu相关命令，对该镜像进行压缩，压缩后的镜像命名为chinaskill-js-compress.qcow2并存放在/root目录下。完成后提交controller点的用户名、密码（默认Abc@1234）和IP地址到答题框。


#、【实操题】swift配置glance后端存储（1分）
使用OpenStack私有云平台，使用Swift对象存储服务，修改相应的配置文件，使对象存储Swift作为glance镜像服务的后端存储，使默认上传的镜像会在swift中创建chinaskill_glance容器。配置完成后上传镜像测试。成功后提交控制节点的用户名、密码（默认Abc@1234）和IP地址到答题框。

#、【实操题】快照管理（1分）
在openstack私有云平台上，创建云主机VM1，镜像使用CentOS7.5，flavor使用2vcpu/4G内存/40G硬盘。创建成功后，将云主机打快照并保存到controller节点/root/cloudsave目录下，保存名字为csccvm.qcow2。最后使用qemu-img相关命令，将镜像的campat版本修改为0.10（该操作是为了适配某些低版本的云平台）。完成后提交控制节点的用户名、密码（默认Abc@1234）和IP地址到答题框。

#、【实操题】OpenStack Python运维脚本开发：使用Restful API方式创建用户 （3分）
在提供的OpenStack私有云平台上，使用T版本的“openstack- python-dev ”镜像创建1台云主机，云主机类型使用4vCPU/12G内存/100G硬盘。该主机中已经默认安装了所需的开发环境，登录默认账号密码为“root/Abc@1234”。使用python request库和OpenStack Restful APIs，在/root目录下，创建api_manager_identity.py文件，编写python代码，代码实现以下任务：
（1）首先实现查询用户，如果用户名称“user_demo”已经存在，先删除。
（2）如果不存在“user_demo”，创建该用户，密码设置为“1DY@2022”。
（3）创建完成后，查询该用户信息，查询的body部分内容控制台输出，同时json格式的输出到文件当前目录下的user_demo.json文件中，json格式要求indent=4。
编写完成后，提交allinone节点的用户名、密码（默认Abc@1234）和IP地址到答题框。




#、【实操题】OpenStack Python运维脚本开发：使用SDK方式创建镜像（3分）
在提供的OpenStack私有云平台上，使用T版本的“openstack- python-dev ”镜像创建1台云主机，云主机类型使用4vCPU/12G内存/100G硬盘。该主机中已经默认安装了所需的开发环境，登录默认账号密码为“root/Abc@1234”。使用“openstacksdk”python库，在/root目录下创建sdk_manager_image.py文件，编写python代码，代码实现以下任务：
（1）先检查OpenStack镜像“cirros-image”名称是否存在？如果存在，先完成删除该镜像；
（2）如果不存在“cirros-image”名称，使用文件服务器上“cirros-0.3.4-x86_64-disk.img”文件创建镜像；
（3）创建完成后，查询该镜像信息，查询的body部分内容控制台输出，同时json格式的输出到文件当前目录下的image_demo.json文件中，json格式要求indent=4。
编写完成后，提交allinone节点的用户名、密码（默认Abc@1234）和IP地址到答题框。

#、【实操题】RabbitMQ集群（1分）
使用OpenStack私有云平台，创建三个centos7.5系统的云主机rabbitmq1、rabbitmq2和rabbitmq3，使用附件\私有云附件\RabbitMQ目录下的软件包安装RabbitMQ服务，安装完毕后，搭建RabbitMQ集群，并打开RabbitMQ服务的图形化监控页面插件。集群使用普通集群模式，其中rabbitmq1做磁盘节点，rabbitmq2和rabbitmq3做内存节点。完成后提交磁盘节点的用户名、密码（默认Abc@1234）和IP地址到答题框。

#、【实操题】Ansible部署kafka集群（2分）
使用提供的OpenStack私有云平台，创建4台系统为centos7.5的云主机，其中一台作为Ansible的母机并命名为ansible，另外三台云主机命名为node1、node2、node3，通过附件中的/ansible/ansible.tar.gz软件包在ansible节点安装Ansible服务；使用这一台母机，编写Ansible脚本（在/root目录下创建example目录作为Ansible工作目录，部署的入口文件命名为cscc_install.yaml），编写Ansible脚本使用roles的方式对其他三台云主机进行安装kafka集群的操作（zookeeper和kafka的安装压缩包在gpmall-single.tar.gz压缩包中，将zookeeper和kafka的压缩包解压到node节点的/opt目录下进行安装）。完成后提交ansible节点的用户名、密码（默认Abc@1234）和IP地址到答题框。（考试系统会连接到你的ansible节点，去执行ansible脚本，请准备好环境，以便考试系统访问）


20、【实操题】数据库高可用集群与负载均衡（2分）
使用赛项提供的OpenStack私有云平台，申请三台CentOS7.9系统的云主机，分别命令为node1、node2、node3，自行在这三个节点上安装数据库服务，数据库密码设置为123456。将这三个节点配置为数据库高可用集群即MariaDB_Galera_Cluster。配置完高可用服务后，安装haproxy负载均衡服务。配置node1节点为负载均衡的窗口，配置负载均衡为轮询算法；HA服务监听的端口为node1节点的3307端口；配置访问三个节点的权重依次为1,2,4。配置完成后提交node1节点的用户名、密码和IP地址到答题框。
21、【实操题】使用python调用api实现创建user（2分）
22、【实操题】使用python调用api实现创建flavor（2分）
使用提供的all-in-one平台。在controller节点的/root目录下创建create_flavor.py文件，在该文件中编写python代码对接openstack api，要求在openstack私有云平台上创建一个云主机类型，名字为pvm_flavor、vcpu为1个、内存为1024m、硬盘为20G、ID为9999。执行完代码要求输出“云主机类型创建成功”。根据上述要求编写python代码，完成后，将controller节点的IP地址，用户名和密码提交。（考试系统会连接到你的controller节点，去执行python脚本，请准备好运行的环境，以便考试系统访问）



容器云 
一、容器云平台搭建（当前任务共4道题目）
1、【实操题】部署容器云平台（2分）
登录OpenStack私有云平台，使用CentOS7.9镜像创建两台云主机，完成Kubernetes 1.22.1集群的搭建。
完成后提交master节点的用户名、密码和IP到答题框。
3、【实操题】部署Istio（1分）
在Kubernetes集群上完成Istio环境的安装。
完成后提交master节点的用户名、密码和IP到答题框。
3、【实操题】部署KubeVirt虚拟化（1分）
在Kubernetes集群上完成KubeVirt虚拟化环境的安装。
完成后提交master节点的用户名、密码和IP到答题框。
4、【实操题】部署Harbor镜像仓库（1分）
在master节点上完成Harbor镜像仓库的部署。
完成后提交master节点的用户名、密码和IP到答题框。	

二、基于Docker Compose编排部署Pig快速开发框架（当前任务共5道题目）
1、【实操题】容器化部署MariaDB（1分）
在master节点上编写/root/Pig/Dockerfile-mariadb文件构建pig-mariadb:v1.0镜像，具体要求如下：（需要用到的软件包：Pig.tar.gz）
（1）基础镜像：centos:centos7.9.2009；
（2）安装并初始化MariaDB，密码：root；
（3）将pig_codegen.sql、pig_config.sql、pig_job.sql、pig.sql导入数据库；
（4）声明端口：3306；
（5）设置MariaDB开机自启。
完成后构建镜像，并提交master节点的IP地址、用户名和密码到答题框。

2、【实操题】容器化部署Redis（1分）
在master节点上编写/root/Pig/Dockerfile-redis文件构建pig-redis:v1.0镜像，具体要求如下：（需要用到的软件包：Pig.tar.gz）
（1）基础镜像：centos:centos7.9.2009；
（2）安装redis服务；
（3）修改配置文件中的bind 127.0.0.1为bind 0.0.0.0；
（4）设置redis免密，并关闭保护模式；
（5）声明端口：6379；
（6）设置服务开机自启。
完成后构建镜像，并提交master节点的IP地址、用户名和密码到答题框。


3.	构建pig-nacos:v1.1镜像，

4、【实操题】容器化部署前端服务（1分）
在master节点上编写/root/Pig/Dockerfile-nginx文件构建pig-ui:v1.0镜像，具体要求如下：（需要用到的软件包：Pig.tar.gz）
（1）基础镜像：centos:centos7.9.2009；
（2）安装nginx服务；
（3）将dist拷贝到/data目录下，并将pig-ui.conf拷贝到/etc/nginx/conf.d/目录下；
（4）设置nginx服务开机自启。
完成后构建镜像，并提交master节点的IP地址、用户名和密码到答题框。

5、【实操题】编排部署Pig快发开发平台（2.5分）
在master节点上编写/root/Pig/docker-compose.yaml文件，具体要求如下：
（1）容器1名称：pig-mysql；镜像：pig-mariadb:v1.0；端口映射：3306:3306；
（2）容器2名称： pig-redis；镜像：pig-redis:v1.0；端口映射：6379:6379；
（3）容器3名称：pig-service；镜像：pig-server:v1.0；端口映射：8848:8848、9999:9999；
（4）容器4名称：pig-ui；镜像：pig-server:v1.0；端口映射：80:8888。
完成后编排部署Pig快速开发平台。然后提交master节点的IP地址、用户名和密码到答题框。



二、Kubernetes平台持续集成应用任务（当前任务共5道题目）
1、【实操题】安装Jenkins环境（2分）
在Kubernetes集群default命名空间下完成Jenkins的部署，使用镜像jenkins/jenkins:latest，Deployment和Service名称均为jenkins，要求以NodePort方式将Jenkins的8080端口对外暴露为30880，并完成离线插件的安装。部署完成后设置Jenkins用户名为jenkins；密码为000000，并在授权策略中配置“任何用户可以做任何事(没有任何限制)”。
完成后提交master节点的用户名、密码和IP地址到答题框。（需要用到的软件包路径http://10.24.1.46/Jenkins.tar.gz）

2、【实操题】安装GitLab环境（2分）
在Kubernetes集群default命名空间下完成GitLab的部署，使用镜像gitlab/gitlab-ce:latest，Deployment和Service名称均为gitlab，要求在Deployment资源清单文件中设置GitLab的root用户密码为admin123，并以NodePort方式将GitLab的80端口对外暴露为30888。部署完成后新建公开项目springcloud，并将springcloud文件夹中的代码上传到该项目。
完成后提交master节点的用户名、密码和IP地址到答题框。（需要用到的软件包路径http://10.24.1.46/Jenkins.tar.gz）
 

3、【实操题】配置Jenkins连接GitLab（1分）
配置Jenkins连接GitLab，在GitLab中生成名为jenkins的“Access Tokens”，在Jenkins中配置GitLab并测试其连通性。
完成后提交master节点的用户名、密码和IP地址到答题框。（需要用到的软件包路径http://<IP>/Jenkins.tar.gz）


4、【实操题】配置Jenkins连接maven（1分）
在Jenkins容器中完成Maven的安装，并在Jenkins全局工具配置中新增Maven。
完成后提交master节点的用户名、密码和IP地址到答题框。（需要用到的软件包路径错误!超链接引用无效。）

5、【实操题】构建CI/CD（3分）
在Jenkins中新建一个流水线任务springcloud，基于GitLab中的springcloud项目，编写流水线脚本，触发构建，完成项目代码构建，并构建docker镜像推送到Harbor仓库的springcloud项目，基于新构建的镜像完成config和gateway服务自动发布到Kubernetes集群springcloud命名空间下。
完成后提交master节点的用户名、密码和IP地址到答题框。（需要用到的软件包路径http://<IP>/Jenkins.tar.gz）

1、【实操题】参数调优--修改Pod数量限制（1分）
Kubernetes 默认每个节点只能启动110个Pod，由于业务需要，需要在所有节点上运行大量资源消耗非常小的Pod，请将每个节点默认限制的Pod数量改为200。完成后提交master节点的用户名、密码和IP到答题框。




2、【实操题】参数调优--修改NodePort端口范围（1分）
Kubernetes以NodePort方式暴露服务默认的端口范围为30000-32767，请将NodePort的端口范围修改为20000-65535。完成后提交master节点的用户名、密码和IP到答题框。

/etc/kubernetes/manifests/kube-apiserver.yaml    service-node-port

3、【实操题】RBAC管理--创建角色并并绑定（1分）
创建一个名为deployment-clusterrole的clusterrole，并且对该clusterrole只绑定对Deployment、Daemonset、Statefulset的创建权限。在指定命名空间exam创建一个名为exam-user的serviceaccount，并且将上一步创建clusterrole和该serviceaccount绑定。
完成后提交master节点的用户名、密码和IP地址到答题框。

4、【实操题】服务部署 （4分）
在Kubernetes集群default命名空间下完成ownCloud云盘系统的部署。启动一个名为owncloud的Deployment，包含一个Pod，Pod内包含两个容器owncloud（镜像：owncloud:latest）和mysql（mysql:5.6）。为该Deployment创建一个名为owncloud-svc的Service，以NodePort方式将容器的80端口对外暴露为30003。
完成后提交master节点的用户名、密码和IP地址到答题框。

5、【实操题】资源配额管理（2分）
创建命名空间quota-example，在master节点/root目录下编写YAML文件quota.yaml，具体要求如下：
（1）ResourceQuota名称：compute-resources；
（2）命名空间：quota-example；
（3）命名空间内所有Pod数量不超过4；
（4）命名空间内所有容器内存申请总和不得超过1G；
（5）命名空间内所有内存限制不得超过2G；
（6）命名空间内所有容器申请的CPU不得超过1；
（7）命名空间内所有容器限制的CPU不得超过2。
完成后使用该YAML文件创建ResourceQuota，并提交master节点的用户名、密码和IP到答题框。



1、【实操题】网络策略管理（3分）
创建一个网络策略network-exam，要求只有internal命名空间下的Pod可以通过TCP协议的8080端口访问到mysql命名空间下的Pod。
完成后提交master节点的IP、用户名和密码到答题框。
2、【实操题】sercet 管理（2分）
3、【实操题】节点选择器（2分）
为node节点打上标签“disktype=ssd”，在default命名空间下使用nginx:latest镜像创建一个名为nginx的Pod，将其调度到有“disktype=ssd”标签的节点上。
完成后提交master节点的IP、用户名和密码到答题框。
5、【实操题】服务部署 （4分）
在Kubernetes集群default命名空间下完成ownCloud云盘系统的部署。启动一个名为owncloud的Deployment，包含一个Pod，Pod内包含两个容器owncloud（镜像：owncloud:latest）和mysql（mysql:5.6）。为该Deployment创建一个名为owncloud-svc的Service，以NodePort方式将容器的80端口对外暴露为30003。
完成后提交master节点的用户名、密码和IP地址到答题框。
6、【实操题】资源配额管理（3分）
创建命名空间quota-example，在master节点/root目录下编写YAML文件quota.yaml，具体要求如下：
（1）ResourceQuota名称：compute-resources；
（2）命名空间：quota-example；
（3）命名空间内所有Pod数量不超过4；
（4）命名空间内所有容器内存申请总和不得超过1G；
（5）命名空间内所有内存限制不得超过2G；
（6）命名空间内所有容器申请的CPU不得超过1；
（7）命名空间内所有容器限制的CPU不得超过2。
完成后使用该YAML文件创建ResourceQuota，并提交master节点的用户名、密码和IP到答题框。

6、【实操题】Pod管理--创建多容器Pod（1分）
在default命名空间下创建一个名为multus的Pod，要求该Pod内运行四个容器：nginx（镜像nginx:latest）、redis（镜像redis:latest）、memcached（镜像memcached）和consul（consul:latest）。（http://10.24.1.46/multus-pod.tar）
完成后提交master节点的IP地址、用户名和密码到答题框。
 



								公有云
8、【实操题】应用商城迁移上云（1分）
在chinaskill-node-1云服务上部署gpmall，mysql使用云数据库分写分离地址，配置公有云Redis访问路径，（gpmall应用商城的软件包gpmall-cloud.tar.gz在http服务下）完成商城的上云操作。并设置gpmall所需jar软件包开启自动启动。完成后提交chinaskill-node-1的用户名、密码和公网IP到答题框。
9、【实操题】云备份（1分）
创建一个云服务器备份存储库名为server_backup，容量为100G。将ChinaSkill-node-1云服务器制作镜像文件chinaskill-image。完成后，将当前的AK（SecretId）、SK（SecretKey）和存储库ID到答题框。

10、【实操题】云实例管理（1分）
使用所创建的私有镜像chinaskill-image购买云服务器ChinaSkill-node-3，配置与ChinaSkill-node-1云服务器相同。完成后提交chinaskill-node-3的用户名、密码和公网IP到答题框。
11、【实操题】网络ACL（2分）
创建一个网络ACL，具体要求如下：
（1）名称：intnetX-acl；
（2）允许策略：只放行源地址为172.16.1.0/24访问3306端口；
（3）允许策略：只放行源地址为172.16.1.0/24使用ping命令访问；
（4）关联子网：关联网络ACL至net-mysql子网中；
创建完成后，提交当前的AK（SecretId）、SK（SecretKey）和网络ACL ID到答题框。
12、【实操题】负载均衡器（1分）
创建一个负载均衡器chinaskill-elb，将ChinaSkill-node-1和ChinaSkill-node-2加入负载均衡的后端。设置一个可用的公网服务IP，服务端口为80。配置监听器，监听80端口。对浮动公共IP进行Web访问测试。完成后，提交当前的AK（SecretId）、SK（SecretKey）和负载均衡器的ID到答题框。
13、【实操题】弹性伸缩管理（2分）
新建一个启动配置，具体要求如下：
（1）启动配置名称：template-exam；
（2）计费模式：按量计费；
（3）地域：上海一；
（4）镜像：chinaskill-image；
（5）登录方式：使用密码登录，密码自定义。
创建一个伸缩组，具体要求如下：
（1）名称：as-exam；
（2）最小伸缩数：1；起始实例数：1；最大伸缩数：5；
（3）启动配置：template-exam；
（4）使用负载均衡：chinaskill-elb；
（5）移出策略：移出最旧的实例。
为伸缩组as-exam新建告警触发策略，具体要求如下：
（1）如果实例的内存利用率在5分钟内的最大值小于40%，且连续发生3次。则实例数减少1台。冷却120秒；
（2）如果实例的内存利用率在5分钟内的最大值大于80%，且连续发生3次。则实例数增加1台。冷却120秒；
（3）如果实例的CPU利用率在5分钟内的最大值小于40%，且连续发生3次。则实例数减少1台。冷却120秒；
（4）如果实例的CPU利用率在5分钟内的平均值大于等于80%，且连续发生3次。则实例数增加1台。冷却120秒。
创建完成后提交当前的AK（SecretId）、SK（SecretKey）和伸缩组的实例ID到答题框。

1、【实操题】云容器引擎（1分）
创建一个x86架构集群，具体要求如下：
（1）集群名称：kcloud；
（2）集群版本：v1.21；
（3）地域：上海一；
（4）集群管理规模：50节点；
（5）控制节点数：3；
（6）节点使用子网：intnetX-server；
（7）Pod实例上限：64；
（8）容器网段：10.10.0.0/16。
节点配置信息要求如下：
（1）节点名称：kcloud-server；
（2）节点规格：c6s.xlarge.2
（3）节点：EulerOS 2.9
创建完成后提交当前的AK（SecretId）、SK（SecretKey）和集群的ID到答题框。

2、【实操题】云容器管理（1分）
使用插件管理在kcloud容器集群中安装dashboard可视化监控界面。完成后，提交dashboard访问地址到答题框。

3、【实操题】使用kubectl操作集群（2分）
在kcloud集群中安装kubectl命令，使用kubectl命令管理kcloud集群。完成后提交连接kcloud集群节点的用户名、密码和公网IP地址到答题框。
4、【实操题】Pod管理（2分）
在kcloud集群节点/root目录下编写YAML文件nginx.yaml，具体要求如下：
（1）Pod名称：nginx-pod；
（2）命名空间：default；
（3）容器名称：mynginx；
（4）镜像：nginx；拉取策略：IfNotPresent；
（5）容器端口：80。
完成后使用该YAML文件创建Pod，并提交master节点的用户名、密码和IP到答题框。
5、【实操题】多容器Pod管理（1.5分）
在kcloud集群节点/root目录下编写YAML文件mu-pod.yaml，具体要求如下：
（1）Pod名称：mu-pod；
（2）命名空间：default；
（3）Pod包含两个容器：
• 容器1名称：containers01；镜像：nginx；容器端口：80；
• 容器2名称：containers02；镜像：tomcat；容器端口：8080；
（4）拉取策略：IfNotPresent。
完成后使用该YAML文件创建Pod，并提交master节点的用户名、密码和IP到答题框。

6、【实操题】Namespace管理（1.5分）
在kcloud集群节点/root目录下编写YAML文件my-namespace.yaml，具体要求如下：
（1）Namespace名称：test。
完成后使用该YAML文件创建Namespace，并提交master节点的用户名、密码和IP到答题框。
7、【实操题】python环境准备（1.5分）
通过华为云控制台，选择北京四区域，创建一台x86架构，按需计费的2核，4G，硬盘50G的云实例，实例名为ChinaSkill，选择镜像为CentOS 7.5 64bit(40GB)，分配独立的公网IP，带宽选择按使用流量计费5M。登录此云服务器，安装Python3，然后使用Python安装huaweicloud-sdk-python库。（所需库文件HUAWEICloud-Python.zip在http下）完成后提交服务器节点的用户名、密码和IP地址到答题框。（Python对接公有云的题均使用X86架构）
8、【实操题】云服务器组管理（1.5分）
在云服务器的/root/huawei目录下编写create_server_group.py文件，并导入赛项提供的huaweicloudapi.py文件获取连接。编写Python代码，调用compute类，创建华为云的云服务器组，具体要求为
（1）云服务器组名称：chinaskills_server_group；
（2）云服务器组策略：反亲和性；
（3）如果安全组已经存在，代码中需要先删除；
（4）使用其源码的get方法输出此云服务器组的详细信息。
完成后提交云服务器节点的用户名、密码和IP地址到答题框。

9、【实操题】安全组管理（1.5分）
在云服务器的/root/huawei目录下编写create_security_group.py文件，并导入赛项提供的huaweicloudapi.py文件获取连接。编写Python代码，调用vpcv1类，创建华为云的安全组，具体要求为 
（1）安全组名称：chinaskills_security_group；
（2）如果安全组已经存在，代码中需要先删除；
（3）使用其源码的get方法输出此安全组的详细信息。
完成后提交云服务器节点的用户名、密码和IP地址到答题框。

10、【实操题】安全组规则管理（1.5分）
在云服务器的/root/huawei目录下编写create_security_group_rule.py文件，并导入赛项提供的huaweicloudapi.py文件获取连接。基于上一题的安全组，编写Python代码，调用vpcv1类，创建华为云的安全组规则，具体要求为
（1）使用安全组名称获取其ID（不允许直接填写安全组ID）；
（2）删除此安全组里所有规则（保证代码可以重复执行）；
（3）放通出方向规则：所有协议端口；
（4）放通入方向规则：TCP协议22端口；
（5）放通入方向规则：ICMP协议所有端口；
（6）使用其源码的get方法输出此安全组的详细信息。
完成后提交云服务器节点的用户名、密码和IP地址到答题框。



 
 
